{"ast":null,"code":"var _jsxFileName = \"/Users/jasonquick/Thinkful/qualified/pomodoro/j/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  let progress;\n\n  if (prevState.label === \"Focusing\") {\n    progress = prevState.pro;\n  }\n\n  return { ...prevState,\n    timeRemaining,\n    progress\n  };\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n        progress: 0\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n      progress: 0\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(\"05\");\n  const [disable, setDisable] = useState(true);\n  const [disableTime, setDisableTime] = useState(false);\n  const [disableProgress, setDisableProgress] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const increaseFocusTime = () => {\n    if (isTimerRunning === false && focusDuration <= 55) {\n      let New = focusDuration + 5;\n\n      if (New < 10) {\n        New = \"0\" + New;\n      }\n\n      setFocusDuration(New);\n    }\n  };\n\n  const decreaseFocusTime = () => {\n    if (isTimerRunning === false && focusDuration > 5) {\n      let New = focusDuration - 5;\n\n      if (New < 10) {\n        New = \"0\" + New;\n      }\n\n      setFocusDuration(New);\n    }\n  };\n\n  const increaseBreaktime = () => {\n    let Int = parseInt(breakDuration);\n\n    if (isTimerRunning === false && Int <= 14) {\n      let New = Int + 1;\n\n      if (New < 10) {\n        New = \"0\" + New;\n      }\n\n      let str = New.toString();\n      setBreakDuration(str);\n    }\n  };\n\n  const decreaseBreakTime = () => {\n    let Int = parseInt(breakDuration);\n\n    if (isTimerRunning === false && Int > 1) {\n      let New = Int - 1;\n\n      if (New < 10) {\n        New = \"0\" + New;\n      }\n\n      let str = New.toString();\n      setBreakDuration(str);\n    }\n  };\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setDisable(false);\n    setDisableTime(true);\n    setDisableProgress(true);\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n              progress: 0\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  function startStop() {\n    if (disable !== true) {\n      setDisableProgress(false);\n      setIsTimerRunning(false);\n      session.timeRemaining = null;\n      session.label = null;\n      setDisable(true);\n    } else {\n      setDisableTime(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", focusDuration, \":00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: decreaseFocusTime,\n    disabled: disableTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: increaseFocusTime,\n    disabled: disableTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", breakDuration, \":00\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: decreaseBreakTime,\n    disabled: disableTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: increaseBreaktime,\n    disabled: disableTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: startStop,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, disableProgress ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, session.label === \"On Break\" ? /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", breakDuration, \":00 minutes\") : /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", focusDuration, \":00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, new Date(session.timeRemaining * 1000).toISOString().substr(11, 8), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": session.progress // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: session.progress + '%'\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }))))) : null));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/jasonquick/Thinkful/qualified/pomodoro/j/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","nextTick","prevState","timeRemaining","Math","max","progress","label","pro","nextSession","focusDuration","breakDuration","currentSession","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuration","disable","setDisable","disableTime","setDisableTime","disableProgress","setDisableProgress","setProgress","increaseFocusTime","New","decreaseFocusTime","increaseBreaktime","Int","parseInt","str","toString","decreaseBreakTime","Audio","play","playPause","nextState","prevStateSession","startStop","oi","Date","toISOString","substr","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  let progress\n  if (prevState.label === \"Focusing\"){\n    progress = (prevState.pro)\n  }\n  return {\n    ...prevState,\n    timeRemaining,\n    progress\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n        progress: 0\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n      progress: 0\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(\"05\");\n  const [disable, setDisable] = useState(true);\n  const [disableTime, setDisableTime] = useState(false);\n  const [disableProgress, setDisableProgress] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const increaseFocusTime = () => {\n    if (isTimerRunning === false && focusDuration <= 55){\n      let New = focusDuration + 5;\n      if (New < 10){\n        New = \"0\" + New\n      }\n      setFocusDuration(New)\n    }\n  }\n  const decreaseFocusTime = () => {\n    if (isTimerRunning === false && focusDuration > 5){\n      let New = focusDuration - 5;\n      if (New < 10){\n        New = \"0\" + New\n      }\n      setFocusDuration(New)\n    }\n  }\n  const increaseBreaktime = () => {\n    let Int = parseInt(breakDuration);\n    if (isTimerRunning === false && Int <= 14){\n      let New = Int + 1;\n      if (New < 10){\n        New = \"0\" + New\n      }\n      let str = New.toString()\n      setBreakDuration(str)\n    } \n  }\n  const decreaseBreakTime = () => {\n    let Int = parseInt(breakDuration);\n    if(isTimerRunning === false && Int > 1){\n      let New = Int - 1;\n      if (New < 10){\n        New = \"0\" + New\n      }\n      let str = New.toString()\n      setBreakDuration(str)\n    }\n  }\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setDisable(false);\n    setDisableTime(true);\n    setDisableProgress(true);\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n              progress: 0\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n  function startStop(){\n    if (disable !== true){\n      setDisableProgress(false);\n      setIsTimerRunning(false);\n      session.timeRemaining = null;\n      session.label = null;\n      setDisable(true);\n    }\n    else {\n      setDisableTime(false)\n    }\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {focusDuration}:00\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick = {decreaseFocusTime}\n                disabled={disableTime}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick = {increaseFocusTime}\n                disabled={disableTime}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {breakDuration}:00\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick = {decreaseBreakTime}\n                  disabled={disableTime}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick = {increaseBreaktime}\n                  disabled={disableTime}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick ={startStop}\n              disabled={disable}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        {disableProgress ? \n        <div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            {session.label === \"On Break\" ? \n            <h2 data-testid=\"session-title\">\n              {session?.label} for {breakDuration}:00 minutes\n            </h2> : \n            <h2 data-testid=\"session-title\">\n            {session?.label} for {focusDuration}:00 minutes\n          </h2> }\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {new Date(session.timeRemaining * 1000).toISOString().substr(11, 8)} remaining\n            </p> \n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={session.progress} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: session.progress + '%' }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n        </div> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}